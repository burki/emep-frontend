{% block entries %}
    <link rel="stylesheet" href="{{ app.request.basepath }}/vendor/datatables-1.10.16/datatables.min.css">
    <script src="{{ app.request.basepath }}/vendor/datatables-1.10.16/datatables.min.js"></script>
    <style>
        .collapsed {
            display: none;
        }
    </style>
    <script>
        /*
        $( document ).ready(function() {
            $('#entries').DataTable({
                paging: false,
                searching: false,
                info: false,
                "columns": [
                    { "orderSequence": [ "desc", "asc" ] },
                    { "orderSequence": [ "desc", "asc" ] }
                ]
            });
        })
        */

        $(document).ready(function() {
            var groupColumn = 1;
            var table = $('#entrytable').DataTable({
                paging: false,
                searching: false,
                info: false,
                "columnDefs": [
                    { "visible": false, "targets": groupColumn }
                ],
                "order": [[ groupColumn, 'asc' ]],
                "displayLength": 25,
                "drawCallback": function ( settings ) {
                    var api = this.api();
                    var rows = api.rows( {page:'current'} ).nodes();
                    var last=null;

                    api.column(groupColumn, {page:'current'} ).data().each( function ( group, i ) {
                        if ( last !== group ) {
                            var splitGroup = group.split('>');
                            splitGroup  = splitGroup[1].split('</a');
                            splitGroup = splitGroup[0];


                            $(rows).eq( i ).before(
                                '<tr class="group groupHeader" data-name="' + splitGroup + '" ><td colspan="5"><span class="minus-collapse">-</span> '+group+'</td></tr>'
                            );

                            last = group;
                        }
                    } );
                }
            } );




            // Order by the grouping
            $('#entrytable tbody').on( 'click', 'tr.group', function () {
                var currentOrder = table.order()[0];
                /* if ( currentOrder[0] === groupColumn && currentOrder[1] === 'asc' ) {
                    table.order( [ groupColumn, 'desc' ] ).draw();
                }
                else {
                    table.order( [ groupColumn, 'asc' ] ).draw();
                }*/


                var splitGroup = $(this).data('name');

                // console.log('.collapseRow[data-rowname="' + splitGroup + '"]');

                $('.collapseRow[data-rowname="' + splitGroup + '"]').toggleClass('collapsed');


                // console.log($(this).data('name'));
            } );
        } );


    </script>







    <div role="tabpanel" class="tab-pane active" id="entries">
        {#
          {{ helper.exhibition_itemexhibition_sort_control(exhibition) }}
        #}


        <table id="entrytable" class="table table-striped table-bordered dataTable listviewcontainer">
            <thead>
            <tr class="listviewheading">
                <th>Artwork Name</th>
            </tr>
            </thead>
            <tbody>
            {% for catalogueEntry in catalogueEntries %}
                {% set initial = catalogueEntry.person.fullname %}

                {% set addresses = catalogueEntry.person.addressesSeparated(exhibition.id) %}


                <tr data-rowname="{{ catalogueEntry.person.fullname(true) }}" data-collapsed="true" class="listviewrow collapsed collapseRow">

                    <td>{{ helper.itemexhibition_detail(catalogueEntry) }}</td>
                    <td><a id="person-{{ catalogueEntry.person.id }}" href="{% if catalogueEntry.person.ulan is not empty %}{{ path('person-by-ulan', { 'ulan' : catalogueEntry.person.ulan }) }}{% elseif catalogueEntry.person.gnd is not empty %}{{ path('person-by-gnd', { 'gnd' : catalogueEntry.person.gnd }) }}{% else %}{{ path('person', { 'id' : catalogueEntry.person.id }) }}{% endif %}">{{ catalogueEntry.person.fullname(true) }}</a>
                        {% if addresses is not empty %}
                            <span class="small">
                        {% for address in addresses %}
                            {{ address['info']|replace({ "\n" : ", " }) }}{% if not loop.last %}; {% endif %}
                        {% endfor %}
                            </span>
                        {% endif %}</td>
                </tr>
            {% endfor %}
            </tbody>
        </table>


    </div><!-- .tab-pane -->
{% endblock %}