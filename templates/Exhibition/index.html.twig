{% extends 'Base/base.html.twig' %}

{% import 'Shared/helper.html.twig' as helper %}

{% block head %}
    <link rel="stylesheet" href="{{ app.request.basepath }}/vendor/select2-4.0.3/css/select2.min.css" />
    <script src="{{ app.request.basepath }}/vendor/select2-4.0.3/js/select2.full.min.js"></script>
    <link rel="stylesheet" href="{{ app.request.basepath }}/vendor/datatables-1.10.16/datatables.min.css">
    <script src="{{ app.request.basepath }}/vendor/datatables-1.10.16/datatables.min.js"></script>
    <script>
        $(document).ready(function() {
            $('#exhibition_filter_organizer_type').select2();
        });
    </script>
{% endblock %}

{% block body %}





    <h1 class="heading">{{ pageTitle }}</h1>


    <div class="searchbarcontainer w-form">

        <form class="filter" method="get" action="{{ path(app.request.attributes.get('_route')) }}">
            <div class="searchbarinputcontainer">
                {{ form_rest(form) }}
            </div>
            <div class="searchbuttoncontainer"><input type="submit" name="submit-filter" value="Search" class="submit-button w-button">
            </div>
        </form>
    </div>



    <div class="filter-combination-container">
        <div class="filters-heading">Filters</div>
        <div class="additional-filter-container">

            {# refactor as macro #}
            {% for countryAbbriviation in countries %}
                <div class="filter-row">
                    <div class="div-block-5">
                        <div class="first-filter-term">
                            <div>Country</div>
                        </div>
                        <div class="is_equal_to">
                            <div>is equal to</div>
                        </div>
                        <div class="first-filter-term">
                            {# find country to text method #}
                            <div>{{ countryArray[countryAbbriviation]|capitalize }}</div>
                        </div>
                    </div>
                    <div class="subfilter-buttons-container">
                        <div class="subfilter-remove countryAbbr" data-country="{{ countryAbbriviation }}">
                            <div>remove</div>
                        </div>
                    </div>
                </div>
            {% endfor %}

            {# refactor as macro #}
            {% for organizer in organizerType %}
                <div class="filter-row">
                    <div class="div-block-5">
                        <div class="first-filter-term">
                            <div>Organizer Type</div>
                        </div>
                        <div class="is_equal_to">
                            <div>is equal to</div>
                        </div>
                        <div class="first-filter-term">
                            {# find country to text method #}
                            <div>{{ organizer|capitalize }}</div>
                        </div>
                    </div>
                    <div class="subfilter-buttons-container">
                        <div class="subfilter-remove organizer" data-organizer="{{ organizer }}">
                            <div>remove</div>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
    </div>

    <script>
        $(document).ready(function() {
            $('.countryAbbr').on('click', function () {
                var currSelection = $('#exhibition_filter_country').val();
                var currCountry = $(this).data('country');
                // remove array element
                currSelection.splice($.inArray(currCountry, currSelection), 1);
                $('#exhibition_filter_country').val(currSelection);

                // submit form
                $( ".exhibitionFilterForm" ).submit();
            });

            $('.organizer').on('click', function () {
                var currSelection = $('#exhibition_filter_organizer_type').val();
                var currCountry = $(this).data('organizer');
                // remove array element
                currSelection.splice($.inArray(currCountry, currSelection), 1);
                $('#exhibition_filter_organizer_type').val(currSelection);

                // submit form
                $( ".exhibitionFilterForm" ).submit();
            });

            $('.exhibitionFilterForm').on('submit', function (e) {
                console.log('submiting now ....');

                // countries
                var currSelectionCountries = $('#exhibition_filter_country').val() !== null ? $('#exhibition_filter_country').val() : [];
                var currCountrySelected = $('#countrySelector').val();
                currSelectionCountries.push(currCountrySelected);
                currSelectionCountries = jQuery.unique(currSelectionCountries);

                currSelectionCountries = currSelectionCountries.filter(Boolean)  //filters all non-true values ---> especially empty strings
                $('#exhibition_filter_country').val(currSelectionCountries);


                // organization type
                var currSelectionOrganizer = $('#exhibition_filter_organizer_type').val() ? $('#exhibition_filter_organizer_type').val() : [];
                var currOrganizationSelected = $('#organizerSelectore').val();
                currSelectionOrganizer.push(currOrganizationSelected);

                currSelectionOrganizer = jQuery.unique(currSelectionOrganizer);
                $('#exhibition_filter_organizer_type').val(currSelectionOrganizer);

            });
        });

    </script>



    <div class="contentcontainer w-container">


        <div class="listviewrow">

            {# tabs headers #}
            {% embed "Exhibition/Parts/tabs-header-index.html.twig" %}
            {% endembed %}

            <div class="tab-content">
                {% embed "Exhibition/Parts/tabcontent-exhibition-list.html.twig" %}
                {% endembed %}

                {% embed "Exhibition/Parts/tabcontent-map.html.twig" %}
                {% endembed %}

                {% embed "Exhibition/Parts/tabcontent-stat-countries.html.twig" %}
                {% endembed %}
            </div><!-- .tab-content -->
        </div>
    </div>




    {% if 'placeSort' == sortField %}
        <script>
            $(document).ready(function() {
                var groupColumn = 2;
                var table = $('#exhibitions').DataTable({
                    paging: false,
                    searching: false,
                    info: false,
                    "columnDefs": [
                        { "visible": false, "targets": groupColumn }
                    ],
                    "order": [[ groupColumn, 'asc' ]],
                    "displayLength": 25,
                    "drawCallback": function ( settings ) {
                        var api = this.api();
                        var rows = api.rows( {page:'current'} ).nodes();
                        var last=null;

                        api.column(groupColumn, {page:'current'} ).data().each( function ( group, i ) {
                            if ( last !== group ) {

                                $(rows).eq( i ).before(
                                    '<tr class="group groupHeader" data-name="' + group + '" ><td colspan="5"><span class="minus-collapse">-</span> '+group+'</td></tr>'
                                );

                                last = group;
                            }
                        } );
                    }
                } );


            } );
        </script>
    {% endif %}



    <script>
        $(document).ready(function() {


            // Order by the grouping
            $('#exhibitions tbody').on( 'click', 'tr.group', function () {
                var currentOrder = table.order()[0];
                /* if ( currentOrder[0] === groupColumn && currentOrder[1] === 'asc' ) {
                    table.order( [ groupColumn, 'desc' ] ).draw();
                }
                else {
                    table.order( [ groupColumn, 'asc' ] ).draw();
                }*/


                var splitGroup = $(this).data('name');

                // console.log('.collapseRow[data-rowname="' + splitGroup + '"]');

                $('.collapseRow[data-rowname="' + splitGroup + '"]').toggleClass('collapsed');


                // console.log($(this).data('name'));
                } );
        });
    </script>




{% endblock %}


