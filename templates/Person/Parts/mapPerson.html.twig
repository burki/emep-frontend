{% block map %}

    <script>
        {{ map.defineColorIcons() }}
    </script>

    {% set deathPlace = person.deathPlaceInfo(app.request.locale) %}
    {% set birthPlace = person.birthPlaceInfo(app.request.locale) %}

    {% if birthPlace.geo is not empty or deathPlace.geo is not empty %}
        <div id="map" class="col-sm-12" style="width: 100%; min-height: 320px;"></div>

        <script>


            function adjustMapSize() {
                /*
                $('#map').height(function(index, height) {
                    return window.innerHeight - $(this).offset().top;
                });
                */
            }

            $(window).resize(adjustMapSize);
            adjustMapSize();


            var birthAndDeath =  L.featureGroup([
                {% if birthPlace.geo is not empty %}
                    L.marker([ {{ birthPlace.geo }} ], { icon: violetIcon })
                        .bindPopup('<strong>Birth Place:</strong> {% if birthPlace['tgn'] is not empty %}<a href="{{ path('place-by-tgn', { 'tgn': birthPlace['tgn']}) }}">{% endif %}{{ birthPlace['name'] }}{% if deathPlace['tgn'] is not empty %}</a>{% endif %}', { className: 'my-tooltip'}),
                {% endif %}

                {% if deathPlace.geo is not empty %}
                L.marker([ {{ deathPlace.geo }} ], { icon: blackIcon })
                    .bindPopup('<strong>Death Place:</strong> {% if deathPlace['tgn'] is not empty %}<a href="{{ path('place-by-tgn', { 'tgn': deathPlace['tgn']}) }}">{% endif %}{{ deathPlace['name'] }}{% if deathPlace['tgn'] is not empty %}</a>{% endif %}', { className: 'my-tooltip'})
                {% endif %}
            ]);


            // layer with exhibitions of artist
            var actions = L.featureGroup([
                {% for exhibition in person.exhibitions %}
                {% set exhPlace = exhibition.location.geo %}
                {% if exhPlace is empty %}
                    {% set exhPlace = exhibition.location.place.geo %}
                {% endif %}

                {% if exhPlace is not empty %}
                        L.marker([{{ exhPlace }}], { icon: orangeIcon }).bindPopup('<strong>Exhibition:</strong> <a href="{{ path('exhibition', { 'id' : exhibition.id }) }}">{{ exhibition.title }}</a>'),
                    {% endif %}
                {% endfor %}
            ]);

            var calculationGroup =  L.featureGroup([
                {% if birthPlace.geo is not empty %}
                L.marker([ {{ birthPlace.geo }} ], { icon: violetIcon })
                    .bindTooltip('{{ birthPlace['name'] }}', { className: 'my-tooltip'}),
                        {% endif %}

                        {% if deathPlace.geo is not empty %}
                    L.marker([ {{ deathPlace.geo }} ], { icon: blackIcon })
                        .bindTooltip('{{ deathPlace['name'] }}', { className: 'my-tooltip'}),
                {% endif %}
                {% for exhibition in person.exhibitions %}
                    {% set exhPlace = exhibition.location.geo %}
                    {% if exhPlace is not empty %}
                        L.marker([{{ exhPlace }}], { icon: greenIcon }).bindPopup('<a href="{{ path('exhibition', { 'id' : exhibition.id }) }}">{{ exhibition.title }}</a>'),
                    {% endif %}
                {% endfor %}
            ]);

            var map = L.map('map',{
                    layers: [birthAndDeath, actions]
            });

            {% if birthPlace.geo is not empty and deathPlace.geo is not empty and birthPlace.geo != deathPlace.geo %}
            map.fitBounds([ [ {{ birthPlace.geo }} ],
                [ {{ deathPlace.geo }} ] ]);
            {% else %}
            map.setView([{% if birthPlace.geo is not empty %}{{ birthPlace.geo }}{% else %}{{ deathPlace.geo }}{% endif %}], 10);

            {% endif %}

            {{ map.addTileLayer() }}


            map.fitBounds(calculationGroup.getBounds());

            var overlayExhibitionsOverlay = {
                "Exhibitions": actions
            };

            var birthAndDeathOverlay = {
                "Birth and Death places": birthAndDeath
            };



            L.control.layers(birthAndDeathOverlay, overlayExhibitionsOverlay).addTo(map);

        </script>

        <script>
            var baseUrlMarkerImg = "/data/vendor/leaflet-color-markers/img/";
            var violetIcon = new L.Icon({
                iconUrl: baseUrlMarkerImg + 'marker-icon-2x-violet.png',
                shadowUrl: baseUrlMarkerImg + 'marker-shadow.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            });
            var blackIcon = new L.Icon({
                iconUrl: baseUrlMarkerImg + 'marker-icon-2x-black.png',
                shadowUrl: baseUrlMarkerImg + 'marker-shadow.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            });

            var greenIcon = new L.Icon({
                iconUrl: baseUrlMarkerImg + 'marker-icon-2x-green.png',
                shadowUrl: baseUrlMarkerImg + 'marker-shadow.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            });

        </script>

    {% else %}
        <div class="no_data_block">
            <div>no map data available</div>
        </div>
    {% endif %}
{% endblock %}