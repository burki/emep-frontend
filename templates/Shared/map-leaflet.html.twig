{% macro head() %}
    <link rel="stylesheet" href="{{ app.request.basepath }}/vendor/leaflet-1.0.3/leaflet.css" />
    <script src="{{ app.request.basepath }}/vendor/leaflet-1.0.3/leaflet.js"></script>
{% endmacro %}

{% macro head_markercluster() %}
    <link rel="stylesheet" href="{{ app.request.basepath }}/vendor/leaflet.markercluster-1.0.4/MarkerCluster.css" />
    <link rel="stylesheet" href="{{ app.request.basepath }}/vendor/leaflet.markercluster-1.0.4/MarkerCluster.Default.css" />
    <script src="{{ app.request.basepath }}/vendor/leaflet.markercluster-1.0.4/leaflet.markercluster.js"></script>
    <script>
        function escapeHtml(text) {
            return $('<div/>').text(text).html();
        }
    </script>
{% endmacro %}

{% macro head_heatmap() %}
    <script src="{{ app.request.basepath }}/vendor/leaflet-heat/leaflet-heat.js"></script>
    <script src="http://leaflet.github.io/Leaflet.markercluster/example/realworld.10000.js"></script>
{% endmacro %}

{% macro addTileLayer(maxZoom) %}
    if (true) {
        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiaGF1c3ZlcnN0YW5kIiwiYSI6ImNpemU2OWJvaTAwNHIyd252b2ptaDV2NjkifQ.FGA8-opghZHquZJKlHSFdg', {
            maxZoom: {{ maxZoom|default(16) }},
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
                '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                'Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
            id: 'mapbox.streets'
        }).addTo(map);
    }
    else {
        L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: {{ maxZoom|default(18) }},
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
                '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
            id: 'mapbox.streets'
        }).addTo(map);
    }
{% endmacro %}

{% macro showMap(bounds, markers) %}
    {% import _self as map %}
    var map = null;
    function showMap() {
        map = L.map('map');

        map.fitBounds({{ bounds|json_encode|raw }});

        {{ map.addTileLayer() }}
    }
{% endmacro %}